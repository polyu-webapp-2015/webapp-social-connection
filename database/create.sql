-- MySQL Script generated by MySQL Workbench
-- Saturday, December 19, 2015 PM07:00:09 HKT
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema social_connection
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `social_connection` ;

-- -----------------------------------------------------
-- Schema social_connection
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `social_connection` DEFAULT CHARACTER SET utf8 ;
USE `social_connection` ;

-- -----------------------------------------------------
-- Table `social_connection`.`Account`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `social_connection`.`Account` ;

CREATE TABLE IF NOT EXISTS `social_connection`.`Account` (
  `account_id` INT NOT NULL AUTO_INCREMENT,
  `password` VARCHAR(32) NOT NULL,
  `account_type` ENUM('admin', 'helper', 'attendee') NOT NULL,
  `email` VARCHAR(254) NULL,
  `phone_num` VARCHAR(31) NULL,
  PRIMARY KEY (`account_id`),
  UNIQUE INDEX `account_id_UNIQUE` (`account_id` ASC),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  UNIQUE INDEX `phone_UNIQUE` (`phone_num` ASC))
ENGINE = InnoDB
COMMENT = 'for login only';


-- -----------------------------------------------------
-- Table `social_connection`.`Floor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `social_connection`.`Floor` ;

CREATE TABLE IF NOT EXISTS `social_connection`.`Floor` (
  `floor_id` INT NOT NULL,
  `floor_name` TEXT NOT NULL,
  PRIMARY KEY (`floor_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_connection`.`Venue`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `social_connection`.`Venue` ;

CREATE TABLE IF NOT EXISTS `social_connection`.`Venue` (
  `venue_id` INT NOT NULL,
  `floor_id` INT NOT NULL,
  `venue_name` TEXT NOT NULL,
  PRIMARY KEY (`venue_id`),
  INDEX `fk_Venus_1_idx` (`floor_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_connection`.`Event`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `social_connection`.`Event` ;

CREATE TABLE IF NOT EXISTS `social_connection`.`Event` (
  `event_id` INT NOT NULL AUTO_INCREMENT,
  `create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `edit_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `event_type` ENUM('E', 'S', 'A') NOT NULL,
  `venue_id` INT NOT NULL,
  `event_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `creator_account_id` INT NOT NULL DEFAULT 1,
  `editor_account_id` INT NOT NULL DEFAULT 1,
  `subject` VARCHAR(45) NOT NULL,
  `description` TEXT NOT NULL,
  `quota` INT NOT NULL DEFAULT -1,
  PRIMARY KEY (`event_id`),
  INDEX `fk_Event_Account_create_idx` (`creator_account_id` ASC),
  INDEX `fk_Event_Account_edit_idx` (`editor_account_id` ASC),
  INDEX `index_Event_event_type` (`event_type` ASC),
  INDEX `fk_Event_1_idx` (`venue_id` ASC))
ENGINE = InnoDB
COMMENT = 'E \'exhibition\'\nS \'session\'\nA \'attraction\'\n\n//TODO disable default value for event_time';


-- -----------------------------------------------------
-- Table `social_connection`.`Exhibition`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `social_connection`.`Exhibition` ;

CREATE TABLE IF NOT EXISTS `social_connection`.`Exhibition` (
  `event_id` INT(11) NOT NULL,
  PRIMARY KEY (`event_id`))
ENGINE = InnoDB
COMMENT = 'speed up filtering?';


-- -----------------------------------------------------
-- Table `social_connection`.`Event_Attendee`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `social_connection`.`Event_Attendee` ;

CREATE TABLE IF NOT EXISTS `social_connection`.`Event_Attendee` (
  `event_id` INT(11) NOT NULL,
  `account_id` INT(11) NOT NULL,
  `create_time` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`event_id`, `account_id`),
  INDEX `attendee_id` (`account_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_connection`.`Follow`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `social_connection`.`Follow` ;

CREATE TABLE IF NOT EXISTS `social_connection`.`Follow` (
  `follow_id` INT NOT NULL AUTO_INCREMENT,
  `follower_account_id` INT NOT NULL,
  `followed_account_id` INT NOT NULL,
  `remark` TEXT NULL,
  `deleted` TINYINT(1) NOT NULL DEFAULT 0,
  `create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `edit_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`follow_id`),
  INDEX `host_id` (`follower_account_id` ASC),
  INDEX `guest_id` (`followed_account_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_connection`.`Message`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `social_connection`.`Message` ;

CREATE TABLE IF NOT EXISTS `social_connection`.`Message` (
  `msg_id` INT(11) NOT NULL AUTO_INCREMENT,
  `from_account_id` INT(11) NOT NULL,
  `to_account_id` INT(11) NOT NULL,
  `create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `read_time` DATETIME NULL,
  `msg_content` TEXT NOT NULL,
  PRIMARY KEY (`msg_id`),
  INDEX `from_id` (`from_account_id` ASC),
  INDEX `to_id` (`to_account_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_connection`.`Title`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `social_connection`.`Title` ;

CREATE TABLE IF NOT EXISTS `social_connection`.`Title` (
  `title_id` INT NOT NULL AUTO_INCREMENT,
  `title_text` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`title_id`),
  UNIQUE INDEX `title_text_UNIQUE` (`title_text` ASC),
  UNIQUE INDEX `title_id_UNIQUE` (`title_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_connection`.`Country`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `social_connection`.`Country` ;

CREATE TABLE IF NOT EXISTS `social_connection`.`Country` (
  `country_id` INT NOT NULL AUTO_INCREMENT,
  `country_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`country_id`),
  UNIQUE INDEX `country_name_UNIQUE` (`country_name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_connection`.`Organization`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `social_connection`.`Organization` ;

CREATE TABLE IF NOT EXISTS `social_connection`.`Organization` (
  `organization_id` INT NOT NULL AUTO_INCREMENT,
  `organization_type` ENUM('business', 'academic') NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `main_country` INT NOT NULL,
  PRIMARY KEY (`organization_id`),
  INDEX `fk_Organization_1_idx` (`main_country` ASC),
  UNIQUE INDEX `organization_id_UNIQUE` (`organization_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_connection`.`City`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `social_connection`.`City` ;

CREATE TABLE IF NOT EXISTS `social_connection`.`City` (
  `city_id` INT NOT NULL AUTO_INCREMENT,
  `country_id` INT NOT NULL,
  `city_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`city_id`),
  UNIQUE INDEX `city_name_UNIQUE` (`city_name` ASC),
  INDEX `fk_City_1_idx` (`country_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_connection`.`User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `social_connection`.`User` ;

CREATE TABLE IF NOT EXISTS `social_connection`.`User` (
  `account_id` INT ZEROFILL NOT NULL,
  `sex` ENUM('F', 'M', 'other', 'unknown') NOT NULL,
  `first_name` CHAR(63) NOT NULL,
  `last_name` CHAR(63) NOT NULL,
  `organization_id` INT NOT NULL DEFAULT 1,
  `title_id` INT NOT NULL DEFAULT 1,
  `city_id` INT NOT NULL DEFAULT 1,
  `last_announcement_datetime` DATETIME NOT NULL DEFAULT now(),
  PRIMARY KEY (`account_id`),
  INDEX `fk_User_1_idx` (`title_id` ASC),
  INDEX `fk_User_1_idx1` (`organization_id` ASC),
  INDEX `fk_User_2_idx` (`city_id` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 4;


-- -----------------------------------------------------
-- Table `social_connection`.`Event_Organization`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `social_connection`.`Event_Organization` ;

CREATE TABLE IF NOT EXISTS `social_connection`.`Event_Organization` (
  `event_id` INT NOT NULL,
  `organization_id` INT NOT NULL,
  PRIMARY KEY (`event_id`, `organization_id`),
  INDEX `fk_Event_Organization_2_idx` (`organization_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_connection`.`Tag`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `social_connection`.`Tag` ;

CREATE TABLE IF NOT EXISTS `social_connection`.`Tag` (
  `tag_id` INT NOT NULL,
  `tag_content` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`tag_id`),
  UNIQUE INDEX `tag_content_UNIQUE` (`tag_content` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_connection`.`JsonArray`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `social_connection`.`JsonArray` ;

CREATE TABLE IF NOT EXISTS `social_connection`.`JsonArray` (
  `JsonArray_id` INT NOT NULL AUTO_INCREMENT,
  `JsonArray_content` TEXT NOT NULL,
  PRIMARY KEY (`JsonArray_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_connection`.`Friendship_Tag`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `social_connection`.`Friendship_Tag` ;

CREATE TABLE IF NOT EXISTS `social_connection`.`Friendship_Tag` (
  `friendship_id1` INT NOT NULL,
  `friendship_id2` INT NOT NULL,
  `tag_id` INT NULL,
  PRIMARY KEY (`friendship_id1`, `friendship_id2`),
  INDEX `fk_Friendship_Tag_2_idx` (`friendship_id2` ASC),
  INDEX `fk_Friendship_Tag_3_idx` (`tag_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_connection`.`Session`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `social_connection`.`Session` ;

CREATE TABLE IF NOT EXISTS `social_connection`.`Session` (
  `event_id` INT NOT NULL,
  PRIMARY KEY (`event_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_connection`.`Announcement`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `social_connection`.`Announcement` ;

CREATE TABLE IF NOT EXISTS `social_connection`.`Announcement` (
  `announcement_id` INT NOT NULL AUTO_INCREMENT,
  `subject` TEXT NOT NULL,
  `description` TEXT NOT NULL,
  `create_time` DATETIME NOT NULL DEFAULT now(),
  `creator_account_id` INT NOT NULL,
  PRIMARY KEY (`announcement_id`),
  INDEX `fk_Announcement_Account_idx` (`creator_account_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_connection`.`Attraction`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `social_connection`.`Attraction` ;

CREATE TABLE IF NOT EXISTS `social_connection`.`Attraction` (
  `event_id` INT NOT NULL,
  PRIMARY KEY (`event_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_connection`.`Image`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `social_connection`.`Image` ;

CREATE TABLE IF NOT EXISTS `social_connection`.`Image` (
  `image_id` INT NOT NULL AUTO_INCREMENT,
  `url` TEXT NULL,
  PRIMARY KEY (`image_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_connection`.`DiscussBoard`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `social_connection`.`DiscussBoard` ;

CREATE TABLE IF NOT EXISTS `social_connection`.`DiscussBoard` (
  `discussboard_id` INT NOT NULL AUTO_INCREMENT,
  `subject` TEXT NOT NULL,
  `description` TEXT NOT NULL,
  `creator_account_id` INT NOT NULL,
  `editor_account_id` INT NOT NULL,
  `create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `edit_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `deleted` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`discussboard_id`),
  INDEX `fk_DiscussBoard_Account_creator_idx` (`creator_account_id` ASC),
  INDEX `fk_DiscussBoard_Account_editor_idx` (`editor_account_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_connection`.`Post`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `social_connection`.`Post` ;

CREATE TABLE IF NOT EXISTS `social_connection`.`Post` (
  `post_Id` INT NOT NULL AUTO_INCREMENT,
  `subject` TEXT NOT NULL,
  `description` TEXT NOT NULL,
  `discussboard_id` INT NOT NULL,
  `creator_account_id` INT NOT NULL,
  `editor_account_id` INT NOT NULL,
  `create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `edit_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `deleted` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`post_Id`),
  INDEX `fk_Post_DiscussBoard_idx` (`discussboard_id` ASC),
  INDEX `fk_Post_Account_create_idx` (`creator_account_id` ASC),
  INDEX `fk_Post_Account_edit_idx` (`editor_account_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_connection`.`Reply`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `social_connection`.`Reply` ;

CREATE TABLE IF NOT EXISTS `social_connection`.`Reply` (
  `reply_id` INT NOT NULL AUTO_INCREMENT,
  `post_Id` INT NOT NULL,
  `message` TEXT NOT NULL,
  `creator_account_id` INT NOT NULL,
  `editor_account_id` INT NOT NULL,
  `create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `edit_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `deleted` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`reply_id`),
  INDEX `fk_Reply_Post_idx` (`post_Id` ASC),
  INDEX `fk_Reply_Account_create_idx` (`creator_account_id` ASC),
  INDEX `fk_Reply_Account_edit_idx` (`editor_account_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `social_connection`.`Reward`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `social_connection`.`Reward` ;

CREATE TABLE IF NOT EXISTS `social_connection`.`Reward` (
  `reward_id` INT NOT NULL AUTO_INCREMENT,
  `reward_type` ENUM('cash', 'coupon') NOT NULL DEFAULT 'coupon',
  `amount` FLOAT NOT NULL DEFAULT 10,
  `collection_venue` INT NOT NULL DEFAULT 1,
  `status` ENUM('submitted', 'collected', 'cancelled') NOT NULL DEFAULT 'submitted',
  `receiver_id` INT NOT NULL DEFAULT 1,
  `sender_id` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`reward_id`),
  INDEX `fk_Reward_1_idx` (`receiver_id` ASC),
  INDEX `fk_Reward_2_idx` (`sender_id` ASC),
  INDEX `fk_Reward_1_idx1` (`collection_venue` ASC))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `social_connection`.`Account`
-- -----------------------------------------------------
START TRANSACTION;
USE `social_connection`;
INSERT INTO `social_connection`.`Account` (`account_id`, `password`, `account_type`, `email`, `phone_num`) VALUES (1, '123456', 'admin', 'admin@gmail.com', '98765432');
INSERT INTO `social_connection`.`Account` (`account_id`, `password`, `account_type`, `email`, `phone_num`) VALUES (2, '123456', 'helper', 'eric@gmail.com', '98765431');
INSERT INTO `social_connection`.`Account` (`account_id`, `password`, `account_type`, `email`, `phone_num`) VALUES (3, '123456', 'attendee', 'mary@gmail.com', '98765430');
INSERT INTO `social_connection`.`Account` (`account_id`, `password`, `account_type`, `email`, `phone_num`) VALUES (4, '123456', 'attendee', 'peter@gmail.com', '98765429');
INSERT INTO `social_connection`.`Account` (`account_id`, `password`, `account_type`, `email`, `phone_num`) VALUES (5, '123456', 'attendee', 'zhoumoyuan', 'zhoumoyuan');
INSERT INTO `social_connection`.`Account` (`account_id`, `password`, `account_type`, `email`, `phone_num`) VALUES (6, '123456', 'attendee', 'spam@spam.com', '98765428');

COMMIT;


-- -----------------------------------------------------
-- Data for table `social_connection`.`Floor`
-- -----------------------------------------------------
START TRANSACTION;
USE `social_connection`;
INSERT INTO `social_connection`.`Floor` (`floor_id`, `floor_name`) VALUES (1, 'UG 1/F');
INSERT INTO `social_connection`.`Floor` (`floor_id`, `floor_name`) VALUES (2, 'UG 2/F');
INSERT INTO `social_connection`.`Floor` (`floor_id`, `floor_name`) VALUES (3, 'G/F');
INSERT INTO `social_connection`.`Floor` (`floor_id`, `floor_name`) VALUES (4, '1/F');
INSERT INTO `social_connection`.`Floor` (`floor_id`, `floor_name`) VALUES (5, '2/F');
INSERT INTO `social_connection`.`Floor` (`floor_id`, `floor_name`) VALUES (6, '3/F');

COMMIT;


-- -----------------------------------------------------
-- Data for table `social_connection`.`Venue`
-- -----------------------------------------------------
START TRANSACTION;
USE `social_connection`;
INSERT INTO `social_connection`.`Venue` (`venue_id`, `floor_id`, `venue_name`) VALUES (1, 4, 'Main Hall');
INSERT INTO `social_connection`.`Venue` (`venue_id`, `floor_id`, `venue_name`) VALUES (2, 4, 'August Hall');
INSERT INTO `social_connection`.`Venue` (`venue_id`, `floor_id`, `venue_name`) VALUES (3, 5, 'Blaine Hall');
INSERT INTO `social_connection`.`Venue` (`venue_id`, `floor_id`, `venue_name`) VALUES (4, 5, 'Cosmo Hall');

COMMIT;


-- -----------------------------------------------------
-- Data for table `social_connection`.`Event`
-- -----------------------------------------------------
START TRANSACTION;
USE `social_connection`;
INSERT INTO `social_connection`.`Event` (`event_id`, `create_time`, `edit_time`, `event_type`, `venue_id`, `event_time`, `creator_account_id`, `editor_account_id`, `subject`, `description`, `quota`) VALUES (1, DEFAULT, DEFAULT, 'S', 1, DEFAULT, 1, 1, 'Opening Session', 'Description of the Opening Session', 500);
INSERT INTO `social_connection`.`Event` (`event_id`, `create_time`, `edit_time`, `event_type`, `venue_id`, `event_time`, `creator_account_id`, `editor_account_id`, `subject`, `description`, `quota`) VALUES (2, DEFAULT, DEFAULT, 'S', 1, DEFAULT, 1, 1, 'Session 2 part A', 'desctions.......', 250);
INSERT INTO `social_connection`.`Event` (`event_id`, `create_time`, `edit_time`, `event_type`, `venue_id`, `event_time`, `creator_account_id`, `editor_account_id`, `subject`, `description`, `quota`) VALUES (3, DEFAULT, DEFAULT, DEFAULT, 2, DEFAULT, 1, 1, 'Session 2 part B', 'desctions.......', 250);

COMMIT;


-- -----------------------------------------------------
-- Data for table `social_connection`.`Title`
-- -----------------------------------------------------
START TRANSACTION;
USE `social_connection`;
INSERT INTO `social_connection`.`Title` (`title_id`, `title_text`) VALUES (1, '');
INSERT INTO `social_connection`.`Title` (`title_id`, `title_text`) VALUES (2, 'Mr.');
INSERT INTO `social_connection`.`Title` (`title_id`, `title_text`) VALUES (3, 'Mrs.');
INSERT INTO `social_connection`.`Title` (`title_id`, `title_text`) VALUES (4, 'Miss.');
INSERT INTO `social_connection`.`Title` (`title_id`, `title_text`) VALUES (5, 'Dr.');
INSERT INTO `social_connection`.`Title` (`title_id`, `title_text`) VALUES (6, 'Ir.');
INSERT INTO `social_connection`.`Title` (`title_id`, `title_text`) VALUES (7, 'Sir');
INSERT INTO `social_connection`.`Title` (`title_id`, `title_text`) VALUES (8, 'Lady');

COMMIT;


-- -----------------------------------------------------
-- Data for table `social_connection`.`Country`
-- -----------------------------------------------------
START TRANSACTION;
USE `social_connection`;
INSERT INTO `social_connection`.`Country` (`country_id`, `country_name`) VALUES (1, '');
INSERT INTO `social_connection`.`Country` (`country_id`, `country_name`) VALUES (2, 'China');
INSERT INTO `social_connection`.`Country` (`country_id`, `country_name`) VALUES (3, 'Japan');
INSERT INTO `social_connection`.`Country` (`country_id`, `country_name`) VALUES (4, 'Korea');

COMMIT;


-- -----------------------------------------------------
-- Data for table `social_connection`.`Organization`
-- -----------------------------------------------------
START TRANSACTION;
USE `social_connection`;
INSERT INTO `social_connection`.`Organization` (`organization_id`, `organization_type`, `name`, `main_country`) VALUES (1, DEFAULT, '', 1);
INSERT INTO `social_connection`.`Organization` (`organization_id`, `organization_type`, `name`, `main_country`) VALUES (2, 'academic', 'Poly U', 2);
INSERT INTO `social_connection`.`Organization` (`organization_id`, `organization_type`, `name`, `main_country`) VALUES (3, 'business', 'E&F Enterprise Hotel', 3);

COMMIT;


-- -----------------------------------------------------
-- Data for table `social_connection`.`City`
-- -----------------------------------------------------
START TRANSACTION;
USE `social_connection`;
INSERT INTO `social_connection`.`City` (`city_id`, `country_id`, `city_name`) VALUES (1, 1, '');
INSERT INTO `social_connection`.`City` (`city_id`, `country_id`, `city_name`) VALUES (2, 2, 'Hong Kong');
INSERT INTO `social_connection`.`City` (`city_id`, `country_id`, `city_name`) VALUES (3, 3, '長崎 (Nagasaki)');
INSERT INTO `social_connection`.`City` (`city_id`, `country_id`, `city_name`) VALUES (4, 2, 'Beijin');

COMMIT;


-- -----------------------------------------------------
-- Data for table `social_connection`.`User`
-- -----------------------------------------------------
START TRANSACTION;
USE `social_connection`;
INSERT INTO `social_connection`.`User` (`account_id`, `sex`, `first_name`, `last_name`, `organization_id`, `title_id`, `city_id`, `last_announcement_datetime`) VALUES (1, 'M', 'Beeno', 'Tung', 1, 1, 1, DEFAULT);
INSERT INTO `social_connection`.`User` (`account_id`, `sex`, `first_name`, `last_name`, `organization_id`, `title_id`, `city_id`, `last_announcement_datetime`) VALUES (2, 'M', 'Eric', 'Wong', 2, 4, 3, DEFAULT);
INSERT INTO `social_connection`.`User` (`account_id`, `sex`, `first_name`, `last_name`, `organization_id`, `title_id`, `city_id`, `last_announcement_datetime`) VALUES (3, 'F', 'Mary', 'Wu', 3, 2, 2, DEFAULT);
INSERT INTO `social_connection`.`User` (`account_id`, `sex`, `first_name`, `last_name`, `organization_id`, `title_id`, `city_id`, `last_announcement_datetime`) VALUES (4, 'M', 'Peter', 'Lee', 3, 6, 2, DEFAULT);
INSERT INTO `social_connection`.`User` (`account_id`, `sex`, `first_name`, `last_name`, `organization_id`, `title_id`, `city_id`, `last_announcement_datetime`) VALUES (5, 'F', '', '', 1, 1, 1, DEFAULT);

COMMIT;


-- -----------------------------------------------------
-- Data for table `social_connection`.`DiscussBoard`
-- -----------------------------------------------------
START TRANSACTION;
USE `social_connection`;
INSERT INTO `social_connection`.`DiscussBoard` (`discussboard_id`, `subject`, `description`, `creator_account_id`, `editor_account_id`, `create_time`, `edit_time`, `deleted`) VALUES (1, 'Global Hotel Experience', 'This board share the experience of entering the golbal market', 1, 1, DEFAULT, DEFAULT, DEFAULT);
INSERT INTO `social_connection`.`DiscussBoard` (`discussboard_id`, `subject`, `description`, `creator_account_id`, `editor_account_id`, `create_time`, `edit_time`, `deleted`) VALUES (2, 'Eco-friendly Policy', 'This board share views on golbal-friendly policy', 2, 2, DEFAULT, DEFAULT, DEFAULT);

COMMIT;


-- -----------------------------------------------------
-- Data for table `social_connection`.`Post`
-- -----------------------------------------------------
START TRANSACTION;
USE `social_connection`;
INSERT INTO `social_connection`.`Post` (`post_Id`, `subject`, `description`, `discussboard_id`, `creator_account_id`, `editor_account_id`, `create_time`, `edit_time`, `deleted`) VALUES (1, 'How did I enter the golbal market', 'This post is composed by a ten-year global enterprise CEO', 1, 3, 3, DEFAULT, DEFAULT, DEFAULT);
INSERT INTO `social_connection`.`Post` (`post_Id`, `subject`, `description`, `discussboard_id`, `creator_account_id`, `editor_account_id`, `create_time`, `edit_time`, `deleted`) VALUES (2, 'Spam post', 'this is spam description', 1, 6, 6, DEFAULT, DEFAULT, DEFAULT);

COMMIT;


-- -----------------------------------------------------
-- Data for table `social_connection`.`Reply`
-- -----------------------------------------------------
START TRANSACTION;
USE `social_connection`;
INSERT INTO `social_connection`.`Reply` (`reply_id`, `post_Id`, `message`, `creator_account_id`, `editor_account_id`, `create_time`, `edit_time`, `deleted`) VALUES (1, 1, 'I appreciate how you handled the ABC problem. That\'s really brilliant. However, have you think of the drawback DEF? I think you could have done GHI.', 4, 4, DEFAULT, DEFAULT, DEFAULT);
INSERT INTO `social_connection`.`Reply` (`reply_id`, `post_Id`, `message`, `creator_account_id`, `editor_account_id`, `create_time`, `edit_time`, `deleted`) VALUES (2, 1, 'Guess what? This is spam !', 6, 6, DEFAULT, DEFAULT, DEFAULT);

COMMIT;

