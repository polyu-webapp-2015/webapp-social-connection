module SocialConnection{
  interface User;
  interface Group;
};

module SocialConnection{

  interface ResultCode{
    const short Success = 0;
    const short Failed_To_Connect_To_Database = 1;
    const short User_Not_Exist = 2;
    const short Password_Wrong = 3;
    const short No_Permission = 4;
  };
  exception GeneralException{short resultCode;};

  /*this struct store information for login*/
  struct UserAccount{
    string email;
    string phoneNum;
    string password;
  };
  interface User{
    readonly attribute string userId;
    struct UserGroup{
      string groupID;
      string groupName;
      /*used for sorting in front-end*/
      long long lastActionTime;
      long long joinTime;
    };
    typedef sequence<UserGroup> UserGroupSeq;
    void getUserGroupList(out UserGroupSeq userGroupSeq,out short numUserGroupSeq);
  };
  interface UserManager{
    void createUser(in UserAccount newUserAccount) raises (GeneralException);

    /*login operation, return session if success, raise exception if failed*/
    string getSessionId(in UserAccount userAccount) raises (GeneralException);
  };


  interface Group{
    readonly attribute string group_id;
    struct GroupUser{
      User user;
    };

  };

  interface Conference{};

  interface Exhibition{};
};