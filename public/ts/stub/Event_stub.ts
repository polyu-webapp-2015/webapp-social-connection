///<reference path="DataObject.ts"/>
/** @remark this is auto-generated file, do not edit
 * generated by php script
 * */
declare function get_all_row($http: any, table_name: string) : any[];
module stub {
  export class Event_stub extends stub.DataObject {

    /* key */
    protected static __event_id():string {
      return "event_id";
    }

    protected static __create_time():string {
      return "create_time";
    }

    protected static __edit_time():string {
      return "edit_time";
    }

    protected static __event_type():string {
      return "event_type";
    }

    protected static __venue_id():string {
      return "venue_id";
    }

    protected static __event_time():string {
      return "event_time";
    }

    protected static __creator_account_id():string {
      return "creator_account_id";
    }

    protected static __editor_account_id():string {
      return "editor_account_id";
    }

    protected static __subject():string {
      return "subject";
    }

    protected static __description():string {
      return "description";
    }

    protected static __quota():string {
      return "quota";
    }

    /* implement DataObject */
    tableName():string {
      return "Event";
    }
    
    uniqueKeyList():string[] {
      var list:string[] = [];
      list.push("event_id");
      return list;
    }
    
    allKeyList():string[] {
      var list:string[] = [];
      list.push("event_id");
      list.push("create_time");
      list.push("edit_time");
      list.push("event_type");
      list.push("venue_id");
      list.push("event_time");
      list.push("creator_account_id");
      list.push("editor_account_id");
      list.push("subject");
      list.push("description");
      list.push("quota");
      return list;
    }
    
    parseObject(rawObject:any):Event_stub {
      var instance = new Event_stub();
      if(rawObject.hasOwnProperty('event_id'))
        instance.event_id = rawObject.event_id;
      else
        throw new stub.DataObjectParseError(this);
      if(rawObject.hasOwnProperty('create_time'))
        instance.create_time = rawObject.create_time;
      else
        throw new stub.DataObjectParseError(this);
      if(rawObject.hasOwnProperty('edit_time'))
        instance.edit_time = rawObject.edit_time;
      else
        throw new stub.DataObjectParseError(this);
      if(rawObject.hasOwnProperty('event_type'))
        instance.event_type = rawObject.event_type;
      else
        throw new stub.DataObjectParseError(this);
      if(rawObject.hasOwnProperty('venue_id'))
        instance.venue_id = rawObject.venue_id;
      else
        throw new stub.DataObjectParseError(this);
      if(rawObject.hasOwnProperty('event_time'))
        instance.event_time = rawObject.event_time;
      else
        throw new stub.DataObjectParseError(this);
      if(rawObject.hasOwnProperty('creator_account_id'))
        instance.creator_account_id = rawObject.creator_account_id;
      else
        throw new stub.DataObjectParseError(this);
      if(rawObject.hasOwnProperty('editor_account_id'))
        instance.editor_account_id = rawObject.editor_account_id;
      else
        throw new stub.DataObjectParseError(this);
      if(rawObject.hasOwnProperty('subject'))
        instance.subject = rawObject.subject;
      else
        throw new stub.DataObjectParseError(this);
      if(rawObject.hasOwnProperty('description'))
        instance.description = rawObject.description;
      else
        throw new stub.DataObjectParseError(this);
      if(rawObject.hasOwnProperty('quota'))
        instance.quota = rawObject.quota;
      else
        throw new stub.DataObjectParseError(this);
      return instance;
    }
    
    toObject(instance:Event_stub=this):any {
      var rawObject = {};
      rawObject[Event_stub.__event_id()] = instance.event_id;
      rawObject[Event_stub.__create_time()] = instance.create_time;
      rawObject[Event_stub.__edit_time()] = instance.edit_time;
      rawObject[Event_stub.__event_type()] = instance.event_type;
      rawObject[Event_stub.__venue_id()] = instance.venue_id;
      rawObject[Event_stub.__event_time()] = instance.event_time;
      rawObject[Event_stub.__creator_account_id()] = instance.creator_account_id;
      rawObject[Event_stub.__editor_account_id()] = instance.editor_account_id;
      rawObject[Event_stub.__subject()] = instance.subject;
      rawObject[Event_stub.__description()] = instance.description;
      rawObject[Event_stub.__quota()] = instance.quota;
      return rawObject;
    }

    /* variable */
    private event_id:number;
    private create_time:string;
    private edit_time:string;
    private event_type:string;
    private venue_id:number;
    private event_time:string;
    private creator_account_id:number;
    private editor_account_id:number;
    private subject:string;
    private description:string;
    private quota:number;

    /* getter and setter */
    public get_event_id():number {
      return this.event_id * 1;
    }

    public set_event_id(newValue:number) {
      if (this.isEditSupport()) {
        this.event_id = newValue;
      } else {
        throw new DataObjectEditError(this);
      }
    }

    public get_create_time():string {
      return this.create_time ;
    }

    public set_create_time(newValue:string) {
      if (this.isEditSupport()) {
        this.create_time = newValue;
      } else {
        throw new DataObjectEditError(this);
      }
    }

    public get_edit_time():string {
      return this.edit_time ;
    }

    public set_edit_time(newValue:string) {
      if (this.isEditSupport()) {
        this.edit_time = newValue;
      } else {
        throw new DataObjectEditError(this);
      }
    }

    public get_event_type():string {
      return this.event_type ;
    }

    public set_event_type(newValue:string) {
      if (this.isEditSupport()) {
        this.event_type = newValue;
      } else {
        throw new DataObjectEditError(this);
      }
    }

    public get_venue_id():number {
      return this.venue_id * 1;
    }

    public set_venue_id(newValue:number) {
      if (this.isEditSupport()) {
        this.venue_id = newValue;
      } else {
        throw new DataObjectEditError(this);
      }
    }

    public get_event_time():string {
      return this.event_time ;
    }

    public set_event_time(newValue:string) {
      if (this.isEditSupport()) {
        this.event_time = newValue;
      } else {
        throw new DataObjectEditError(this);
      }
    }

    public get_creator_account_id():number {
      return this.creator_account_id * 1;
    }

    public set_creator_account_id(newValue:number) {
      if (this.isEditSupport()) {
        this.creator_account_id = newValue;
      } else {
        throw new DataObjectEditError(this);
      }
    }

    public get_editor_account_id():number {
      return this.editor_account_id * 1;
    }

    public set_editor_account_id(newValue:number) {
      if (this.isEditSupport()) {
        this.editor_account_id = newValue;
      } else {
        throw new DataObjectEditError(this);
      }
    }

    public get_subject():string {
      return this.subject ;
    }

    public set_subject(newValue:string) {
      if (this.isEditSupport()) {
        this.subject = newValue;
      } else {
        throw new DataObjectEditError(this);
      }
    }

    public get_description():string {
      return this.description ;
    }

    public set_description(newValue:string) {
      if (this.isEditSupport()) {
        this.description = newValue;
      } else {
        throw new DataObjectEditError(this);
      }
    }

    public get_quota():number {
      return this.quota * 1;
    }

    public set_quota(newValue:number) {
      if (this.isEditSupport()) {
        this.quota = newValue;
      } else {
        throw new DataObjectEditError(this);
      }
    }

  }
  stub.add_stub_instance(new Event_stub());
}