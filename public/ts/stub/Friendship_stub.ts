///<reference path="DataObject.ts"/>
/** @remark this is auto-generated file, do not edit
 * generated by php script
 * */
declare function get_all_row($http: any, table_name: string) : any[];
module stub {
  export class Friendship_stub extends stub.DataObject {

    /* key */
    protected static __friendship_id():string {
      return "friendship_id";
    }

    protected static __host_id():string {
      return "host_id";
    }

    protected static __guest_id():string {
      return "guest_id";
    }

    protected static __remark():string {
      return "remark";
    }

    /* implement DataObject */
    tableName():string {
      return "Friendship";
    }
    
    uniqueKeyList():string[] {
      var list:string[] = [];
      list.push("friendship_id");
      list.push("host_id");
      list.push("guest_id");
      return list;
    }
    
    parseObject(rawObject:any):Friendship_stub {
      var instance = new Friendship_stub();
      if(rawObject.hasOwnProperty('friendship_id'))
        instance.friendship_id = rawObject.friendship_id;
      else
        throw new stub.DataObjectParseError(this);
      if(rawObject.hasOwnProperty('host_id'))
        instance.host_id = rawObject.host_id;
      else
        throw new stub.DataObjectParseError(this);
      if(rawObject.hasOwnProperty('guest_id'))
        instance.guest_id = rawObject.guest_id;
      else
        throw new stub.DataObjectParseError(this);
      if(rawObject.hasOwnProperty('remark'))
        instance.remark = rawObject.remark;
      else
        throw new stub.DataObjectParseError(this);
      return instance;
    }
    
    toObject(instance:Friendship_stub=this):any {
      var rawObject = {};
      rawObject[Friendship_stub.__friendship_id()] = instance.friendship_id;
      rawObject[Friendship_stub.__host_id()] = instance.host_id;
      rawObject[Friendship_stub.__guest_id()] = instance.guest_id;
      rawObject[Friendship_stub.__remark()] = instance.remark;
      return rawObject;
    }

    /* variable */
    private friendship_id:number;
    private host_id:number;
    private guest_id:number;
    private remark:string;

    /* getter and setter */
    public get_friendship_id():number {
      return this.friendship_id;
    }

    public set_friendship_id(newValue:number) {
      if (this.isEditSupport()) {
        this.friendship_id = newValue;
      } else {
        throw new DataObjectEditError(this);
      }
    }

    public get_host_id():number {
      return this.host_id;
    }

    public set_host_id(newValue:number) {
      if (this.isEditSupport()) {
        this.host_id = newValue;
      } else {
        throw new DataObjectEditError(this);
      }
    }

    public get_guest_id():number {
      return this.guest_id;
    }

    public set_guest_id(newValue:number) {
      if (this.isEditSupport()) {
        this.guest_id = newValue;
      } else {
        throw new DataObjectEditError(this);
      }
    }

    public get_remark():string {
      return this.remark;
    }

    public set_remark(newValue:string) {
      if (this.isEditSupport()) {
        this.remark = newValue;
      } else {
        throw new DataObjectEditError(this);
      }
    }

  }
}