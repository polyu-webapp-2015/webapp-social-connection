///<reference path="DataObject.ts"/>
/** @remark this is auto-generated file, do not edit
 * generated by php script
 * */
declare function get_all_row($http: any, table_name: string) : any[];
module stub {
  export class Announcement_stub extends stub.DataObject {

    /* key */
    protected static __announcement_id():string {
      return "announcement_id";
    }

    protected static __subject():string {
      return "subject";
    }

    protected static __description():string {
      return "description";
    }

    protected static __create_time():string {
      return "create_time";
    }

    /* implement DataObject */
    tableName():string {
      return "Announcement";
    }
    
    uniqueKeyList():string[] {
      var list:string[] = [];
      list.push("announcement_id");
      return list;
    }
    
    parseObject(rawObject:any):Announcement_stub {
      var instance = new Announcement_stub();
      instance.announcement_id = rawObject[Announcement_stub.__announcement_id()];
      instance.subject = rawObject[Announcement_stub.__subject()];
      instance.description = rawObject[Announcement_stub.__description()];
      instance.create_time = rawObject[Announcement_stub.__create_time()];
      return instance;
    }
    
    toObject(instant:Announcement_stub):any {
      var rawObject = {};
      rawObject[Announcement_stub.__announcement_id()] = instant.announcement_id;
      rawObject[Announcement_stub.__subject()] = instant.subject;
      rawObject[Announcement_stub.__description()] = instant.description;
      rawObject[Announcement_stub.__create_time()] = instant.create_time;
      return rawObject;
    }

    /* variable */
    private announcement_id:number;
    private subject:string;
    private description:string;
    private create_time:string;

    /* getter and setter */
    public get_announcement_id():number {
      return this.announcement_id;
    }

    public set_announcement_id(newValue:number) {
      if (this.isEditSupport()) {
        this.announcement_id = newValue;
      } else {
        throw new DataObjectEditError(this);
      }
    }

    public get_subject():string {
      return this.subject;
    }

    public set_subject(newValue:string) {
      if (this.isEditSupport()) {
        this.subject = newValue;
      } else {
        throw new DataObjectEditError(this);
      }
    }

    public get_description():string {
      return this.description;
    }

    public set_description(newValue:string) {
      if (this.isEditSupport()) {
        this.description = newValue;
      } else {
        throw new DataObjectEditError(this);
      }
    }

    public get_create_time():string {
      return this.create_time;
    }

    public set_create_time(newValue:string) {
      if (this.isEditSupport()) {
        this.create_time = newValue;
      } else {
        throw new DataObjectEditError(this);
      }
    }

  }
}