///<reference path="DataObject.ts"/>
/** @remark this is auto-generated file, do not edit
 * generated by php script
 * */
declare function get_all_row($http: any, table_name: string) : any[];
module stub {
  export class Title_stub extends stub.DataObject {

    /* key */
    protected static __title_id():string {
      return "title_id";
    }

    protected static __title_text():string {
      return "title_text";
    }

    /* implement DataObject */
    tableName():string {
      return "Title";
    }
    
    uniqueKeyList():string[] {
      var list:string[] = [];
      list.push("title_id");
      list.push("title_text");
      return list;
    }
    
    allKeyList():string[] {
      var list:string[] = [];
      list.push("title_id");
      list.push("title_text");
      return list;
    }
    
    parseObject(rawObject:any):Title_stub {
      var instance = new Title_stub();
      if(rawObject.hasOwnProperty('title_id'))
        instance.title_id = rawObject.title_id;
      else
        throw new stub.DataObjectParseError(this);
      if(rawObject.hasOwnProperty('title_text'))
        instance.title_text = rawObject.title_text;
      else
        throw new stub.DataObjectParseError(this);
      return instance;
    }
    
    toObject(instance:Title_stub=this):any {
      var rawObject = {};
      rawObject[Title_stub.__title_id()] = instance.title_id;
      rawObject[Title_stub.__title_text()] = instance.title_text;
      return rawObject;
    }

    /* variable */
    private title_id:number;
    private title_text:string;

    /* getter and setter */
    public get_title_id():number {
      return this.title_id * 1;
    }

    public set_title_id(newValue:number) {
      if (this.isEditSupport()) {
        this.title_id = newValue;
      } else {
        throw new DataObjectEditError(this);
      }
    }

    public get_title_text():string {
      return this.title_text ;
    }

    public set_title_text(newValue:string) {
      if (this.isEditSupport()) {
        this.title_text = newValue;
      } else {
        throw new DataObjectEditError(this);
      }
    }

  }
  stub.add_stub_instance(new Title_stub());
}