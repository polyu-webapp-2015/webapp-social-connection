///<reference path="DataObject.ts"/>
/** @remark this is auto-generated file, do not edit
 * generated by php script
 * */
declare function get_all_row($http: any, table_name: string) : any[];
module stub {
  export class Reply_stub extends stub.DataObject {

    /* key */
    protected static __reply_id():string {
      return "reply_id";
    }

    protected static __post_Id():string {
      return "post_Id";
    }

    protected static __message():string {
      return "message";
    }

    protected static __creator_account_id():string {
      return "creator_account_id";
    }

    protected static __editor_account_id():string {
      return "editor_account_id";
    }

    protected static __create_time():string {
      return "create_time";
    }

    protected static __edit_time():string {
      return "edit_time";
    }

    protected static __deleted():string {
      return "deleted";
    }

    /* implement DataObject */
    tableName():string {
      return "Reply";
    }
    
    uniqueKeyList():string[] {
      var list:string[] = [];
      list.push("reply_id");
      return list;
    }
    
    allKeyList():string[] {
      var list:string[] = [];
      list.push("reply_id");
      list.push("post_Id");
      list.push("message");
      list.push("creator_account_id");
      list.push("editor_account_id");
      list.push("create_time");
      list.push("edit_time");
      list.push("deleted");
      return list;
    }
    
    parseObject(rawObject:any):Reply_stub {
      var instance = new Reply_stub();
      if(rawObject.hasOwnProperty('reply_id'))
        instance.reply_id = rawObject.reply_id;
      else
        throw new stub.DataObjectParseError(this);
      if(rawObject.hasOwnProperty('post_Id'))
        instance.post_Id = rawObject.post_Id;
      else
        throw new stub.DataObjectParseError(this);
      if(rawObject.hasOwnProperty('message'))
        instance.message = rawObject.message;
      else
        throw new stub.DataObjectParseError(this);
      if(rawObject.hasOwnProperty('creator_account_id'))
        instance.creator_account_id = rawObject.creator_account_id;
      else
        throw new stub.DataObjectParseError(this);
      if(rawObject.hasOwnProperty('editor_account_id'))
        instance.editor_account_id = rawObject.editor_account_id;
      else
        throw new stub.DataObjectParseError(this);
      if(rawObject.hasOwnProperty('create_time'))
        instance.create_time = rawObject.create_time;
      else
        throw new stub.DataObjectParseError(this);
      if(rawObject.hasOwnProperty('edit_time'))
        instance.edit_time = rawObject.edit_time;
      else
        throw new stub.DataObjectParseError(this);
      if(rawObject.hasOwnProperty('deleted'))
        instance.deleted = rawObject.deleted;
      else
        throw new stub.DataObjectParseError(this);
      return instance;
    }
    
    toObject(instance:Reply_stub=this):any {
      var rawObject = {};
      rawObject[Reply_stub.__reply_id()] = instance.reply_id;
      rawObject[Reply_stub.__post_Id()] = instance.post_Id;
      rawObject[Reply_stub.__message()] = instance.message;
      rawObject[Reply_stub.__creator_account_id()] = instance.creator_account_id;
      rawObject[Reply_stub.__editor_account_id()] = instance.editor_account_id;
      rawObject[Reply_stub.__create_time()] = instance.create_time;
      rawObject[Reply_stub.__edit_time()] = instance.edit_time;
      rawObject[Reply_stub.__deleted()] = instance.deleted;
      return rawObject;
    }

    /* variable */
    private reply_id:number;
    private post_Id:number;
    private message:string;
    private creator_account_id:number;
    private editor_account_id:number;
    private create_time:string;
    private edit_time:string;
    private deleted:any;

    /* getter and setter */
    public get_reply_id():number {
      return this.reply_id * 1;
    }

    public set_reply_id(newValue:number) {
      if (this.isEditSupport()) {
        this.reply_id = newValue;
      } else {
        throw new DataObjectEditError(this);
      }
    }

    public get_post_Id():number {
      return this.post_Id * 1;
    }

    public set_post_Id(newValue:number) {
      if (this.isEditSupport()) {
        this.post_Id = newValue;
      } else {
        throw new DataObjectEditError(this);
      }
    }

    public get_message():string {
      return this.message ;
    }

    public set_message(newValue:string) {
      if (this.isEditSupport()) {
        this.message = newValue;
      } else {
        throw new DataObjectEditError(this);
      }
    }

    public get_creator_account_id():number {
      return this.creator_account_id * 1;
    }

    public set_creator_account_id(newValue:number) {
      if (this.isEditSupport()) {
        this.creator_account_id = newValue;
      } else {
        throw new DataObjectEditError(this);
      }
    }

    public get_editor_account_id():number {
      return this.editor_account_id * 1;
    }

    public set_editor_account_id(newValue:number) {
      if (this.isEditSupport()) {
        this.editor_account_id = newValue;
      } else {
        throw new DataObjectEditError(this);
      }
    }

    public get_create_time():string {
      return this.create_time ;
    }

    public set_create_time(newValue:string) {
      if (this.isEditSupport()) {
        this.create_time = newValue;
      } else {
        throw new DataObjectEditError(this);
      }
    }

    public get_edit_time():string {
      return this.edit_time ;
    }

    public set_edit_time(newValue:string) {
      if (this.isEditSupport()) {
        this.edit_time = newValue;
      } else {
        throw new DataObjectEditError(this);
      }
    }

    public get_deleted():any {
      return this.deleted ;
    }

    public set_deleted(newValue:any) {
      if (this.isEditSupport()) {
        this.deleted = newValue;
      } else {
        throw new DataObjectEditError(this);
      }
    }

  }
  stub.add_stub_instance(new Reply_stub());
}